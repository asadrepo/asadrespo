import React, {Component} from 'react';
import Tab from "react-bootstrap/Tab";
import Row from "react-bootstrap/Row";
import Nav from "react-bootstrap/Nav";
import axios from "axios";
import MalwareTabContainer from "./MalwareTabContainer";
import Loader from "../../common/Loader";
import Popup from "../../common/Popup";
import NewsDetail from "../../SecurityNews/components/NewsDetail";
import MalwareTypeModalContent from "./MalwareTypeModalContent";
import axiosClient from '../../../shared/axiosClient';
import { getToken } from '../../../containers/Auth/Auth';

class  MalwareDetail extends Component {
    state = {
        tabs : [],
        tabContent: "",
        isLoading: false,
        isLoadingContent: false,
        isLoadModalDetail: false,
        malwareTypeModalContent: ""
    };
    async getMalwareTypes(){
        return await axios.get(process.env.REACT_APP_API_URL+'malware/type/', {
            params: {
            },
            headers: {
                Authorization:`Token ${getToken()}`
            }
        });
    }

    async getMalwareTypeById(id){
        return await axios.get(process.env.REACT_APP_API_URL+'malware/', {
            params: {
                _type: id,
                ordering: '-date'
            },
            headers: {
                Authorization:`Token ${getToken()}`
            }
        });
    }

    handleOnClickDetail = (detail) => {
        console.log(detail)
        this.setState({isLoadModalDetail: true});
        this.setState({malwareTypeModalContent: <MalwareTypeModalContent detail={detail} />});
    }

    handleonClosePop = () => {
        this.setState({isLoadModalDetail: false});
    }

    componentDidMount() {
        this.setState({isLoading: true});
        this.setState({isLoadingContent: true});


        axiosClient.malwares.getMalwareTypes().then(response => {
            this.setState({tabs: response.data.results});

            // axiosClient.malwares.getMalwareTypeById({
            //     _type: response.data.results[0].id,
            //     ordering: '-date'
            // }).then(malwareTypes => {
            //     this.setState({tabContent: <MalwareTabContainer tabContainer={malwareTypes.data.results} onClickDetail={this.handleOnClickDetail} />});
            //     this.setState({isLoadingContent: false});
            // }).catch(error => {
            //     this.setState({isLoading: false});
            // });

            this.setState({isLoading: false});
        }).catch(error => {
            this.setState({isLoading: false});
        });
        // this.getMalwareTypes().then(response => {
        //     this.setState({tabs: response.data.results});

        //     this.getMalwareTypeById(response.data.results[0].id).then(malwareTypes => {
        //         this.setState({tabContent: <MalwareTabContainer tabContainer={malwareTypes.data.results} onClickDetail={this.handleOnClickDetail} />});
        //         this.setState({isLoadingContent: false});
        //     }).catch(error => {

        //         }
        //     );
        //     this.setState({isLoading: false});
        // }).catch(error => {
        //     console.log(error.response);
        // });



    }

    onSelectTab = (tabValue) => {
        this.setState({isLoadingContent: true});
        axiosClient.malwares.getMalwareTypeById(tabValue).then(malwareTypes => {
                  console.log(malwareTypes.data.results);
            malwareTypes.data.results.map(res => {
                console.log(res);
            });
            this.setState({tabContent: <MalwareTabContainer tabContainer={malwareTypes.data.results}  onClickDetail={this.handleOnClickDetail}/>});
            this.setState({isLoadingContent: false});
        });
        // this.getMalwareTypeById(tabValue).then(malwareTypes => {
        //     console.log(malwareTypes.data.results);
        //     malwareTypes.data.results.map(res => {
        //         console.log(res);
        //     });
        //     this.setState({tabContent: <MalwareTabContainer tabContainer={malwareTypes.data.results}  onClickDetail={this.handleOnClickDetail}/>});
        //     this.setState({isLoadingContent: false});
        // }).catch(error => {

        //     }
        // );

       // this.setState({tabContent: <MalwareTabContainer container={tabValue} />});
    };

    render () {
        return (
            <div className="modal-body modal_malware_tabs" id="modal-mal-tabs">
                <div className="container">
                    <div className="row">
                        {this.state.isLoading ? <Loader /> :
                            <Tab.Container defaultActiveKey="worm">

                            <Nav as="ul" className="nav nav-tabs">
                                {this.state.tabs.map(tab => {
                                    return (<Nav.Link as="li" className="nav-item"
                                                      eventKey={tab.name.toLowerCase()}
                                                      key={tab.id}
                                                      onSelect={() => this.onSelectTab(tab.id)}>
                                       {tab.name}
                                    </Nav.Link>);
                                })}
                            </Nav>
                            <Tab.Content as={'div'} className="tab-content malware_tab_inner" id="malware-anchor">
                                {this.state.tabs.map(tab => {
                                    return (<Tab.Pane eventKey={tab.name.toLowerCase()} key={tab.id}>
                                        {this.state.isLoadingContent ? <Loader /> : this.state.tabContent}
                                        {/*{this.state.tabContent}*/}
                                    </Tab.Pane>);
                                })}
                            </Tab.Content>


                        </Tab.Container>
                        }


                    </div>
                    <Popup 
                         isShow={this.state.isLoadModalDetail} 
                         onClosePop={this.handleonClosePop}  
                         container={this.state.malwareTypeModalContent} 
                         size={'xl'}
                    />
                </div>
            </div>
        );
    }
}

export default MalwareDetail;