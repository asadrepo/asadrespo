import React, {Component} from 'react';
import axios from "axios";
import Loader from "../common/Loader";
import Detail from "./components/Detail";
import Popup from "../common/Popup";
import ModalContainer from "./components/ModalContainer";
import { getToken } from '../../containers/Auth/Auth';

class TopExploits extends Component {
    state = {
        paging: {
            next:process.env.REACT_APP_API_URL+'exploit/',
            limit:1,
            total:0,
            previous: null,
            offset: 0,

        },
        offset: 0,
        isLoading: false,
        currentPage: 1,
        exploits: {},
        isModelShow: false,
        modalContainer: ""

    };

    async getExploitData(offset){

        return await axios.get(process.env.REACT_APP_API_URL+'exploit/', {
            params: {
                offset: offset,
                limit: 1
            },
            headers: {
                Authorization:`Token ${getToken()}`
               /* Authorization:'Token 977746ca9e1fe6471aeaf7e8c708cb46226f38a1',
                ContentType: 'application/json',*/
            }
        });
    };


    componentDidMount() {

        this.setState({isLoading: true});
        this.getExploitData(this.state.paging).then((res) => {
            
          this.setState({exploits: res.data.results[0]});
          this.setState({paging:{total: res.data.count, next: res.data.next, previous: res.data.previous, offset:0}});
          this.setState({isLoading:false});
        });

    }



    paginate = (current) => {
        if(this.state.currentPage === current)
            return;

        this.setState({isLoading:true});
        this.setState({currentPage: current});
        this.getExploitData(current - 1).then((res) => {
            this.setState({exploits: res.data.results[0]});
            this.setState({isLoading:false});
        });
    };

    handleOnClickMoreDetail = (detail) => {
        this.setState({isModelShow: true});
        //this.props.handleOnClickModal(<ModalContainer content={detail}/>);
        this.setState({modalContainer: <ModalContainer content={detail}/>})
    };

    handleOnclickClosePopup = () => {
        this.setState({isModelShow: false});
    };

    render() {

        return (

            <div className="col-md-3 col-sm-12 exploit_section">
                <div className="comon_bg_style exploit_inner">
                {this.state.isLoading ? <Loader/> : <Detail detail={this.state} paginate={this.paginate} onClickMoreDetail={this.handleOnClickMoreDetail}/>}
                </div>
                <Popup isShow={this.state.isModelShow}
                       onClosePop={this.handleOnclickClosePopup}
                       container={this.state.modalContainer} />
            </div>
        );
    }
}

export default TopExploits;